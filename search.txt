**********************************controller**********************************************
  public ActionResult Index(string option, string search)
        {
            List<Document_Details> DocumentList = db.Document_Details.ToList();
            //return View(DocumentList);

            if (option == "Name")
            {
                //Index action method will return a view with a student records based on what a user specify the value in textbox  
                return View(db.Document_Details.Where(x => x.Document_Name.StartsWith(search) || search == null).ToList());
            }
           
            else if (option == "Author")
            {
                //return View(DocumentList);
                return View(db.Document_Details.Where(x => x.Author.StartsWith(search) || search == null).ToList());

            }
            else
            {
                return View(DocumentList);
            }

        }
****************************View*************************************************************

@* Html.BeginForm is used to add a form in an Html document * @@ * Pass the action name in the first parameter, controller name in the second parameter and specify the form request type as get *@

@using (Html.BeginForm("Index", "Home", FormMethod.Get))
{
    //the following are search options
    <b>Search Option:</b> @Html.RadioButton("option", "Name") <text> Name</text> @Html.RadioButton("option", "Author") <text> Author </text> @Html.TextBox("search") <input type="submit" name="submit" value="search" />
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Document_Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Document_Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Document_Path)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Upload_Date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Discipline.Discipline_Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Document_Type_details.Document_Type_Name)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Document_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Document_Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Document_Path)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Upload_Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discipline.Discipline_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Document_Type_details.Document_Type_Name)
            </td>
            <td>

                @Html.ActionLink("Download", "Download", new { id = item.Price }) |
              
            </td>
        </tr>
    }

</table>